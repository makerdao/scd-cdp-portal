version: 2
jobs:
  install:
    docker:
      - image: circleci/node:lts
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: yarn
      - save_cache:
          paths:
            - node_modules
            - ./node_modules
          key: dependency-cache-{{ checksum "package.json" }}

  deploy_aws_prod:
    docker:
      - image: circleci/node:lts
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Build production artifact
          command: |

            echo "Building project for production environment at $DEPLOYMENT_URL_PRODUCTION"
            DEPLOY_ENV=production PUBLIC_URL=$DEPLOYMENT_URL_PRODUCTION GENERATE_SOURCEMAP=false npm run build

      - run:
          name: Deploy to AWS prod
          command: |
            sudo apt update
            sudo apt install python-pip
            pip install --upgrade --user awscli
            export PATH=$HOME/.local/bin:$PATH

            aws configure set default.region $AWS_REGION
            aws configure set default.output json
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY

            aws s3 sync build s3://$AWS_DEPLOY_S3_BUCKET/ --delete
            aws cloudfront create-invalidation --distribution-id $AWS_DEPLOY_CLOUDFRONT_DISTRIBUTION_ID --paths "/*"

workflows:
  version: 2
  mainflow:
    jobs:
      - install
      - deploy_aws_prod:
          requires:
            - test
          filters:
            branches:
              only: master
